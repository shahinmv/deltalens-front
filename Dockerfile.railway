# Use Node.js 18 alpine as the base image for smaller size
FROM node:18-alpine as build

# Set working directory
WORKDIR /app

# Copy package files first (for better Docker layer caching)
COPY package*.json ./
COPY bun.lockb* ./
COPY .npmrc ./

# Install dependencies with legacy peer deps support
RUN npm install --legacy-peer-deps

# Copy source code
COPY . .

# Build the application
RUN npm run build

# Production stage with nginx
FROM nginx:alpine as production

# Install envsubst (gettext package)
RUN apk add --no-cache gettext

# Copy built files from build stage
COPY --from=build /app/dist /usr/share/nginx/html

# Copy nginx configuration template
COPY nginx-railway.conf /etc/nginx/conf.d/nginx-railway.conf

# Copy and make start script executable
COPY start-nginx.sh /start-nginx.sh
RUN chmod +x /start-nginx.sh

# Remove default nginx config
RUN rm /etc/nginx/conf.d/default.conf

# Expose port (Railway will set PORT env var)
EXPOSE $PORT

# Start nginx with our custom script
CMD ["/start-nginx.sh"]